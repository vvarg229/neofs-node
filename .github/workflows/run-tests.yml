name: Run automated system tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - support/**
    types: [opened, synchronize]
    paths-ignore:
      - '**/*.md'
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      neofs_node_ref:
        description: 'Neofs-node ref. Default ref - latest master. Examples: v0.36.0, 8fdcc6d7e798e6511be8806b81894622e72d7fdc, branch_name'
        required: false
        default: ''

permissions: write-all

jobs:
  run_system_tests:
    runs-on: self-hosted
    timeout-minutes: 500
    env:
      TEST_RESULTS_PASSWORD: ${{ secrets.TEST_RESULTS_PASSWORD }}
      TEST_RESULTS_WALLET: ${{ secrets.TEST_RESULTS_WALLET }}
      TEST_RESULTS_NEOFS_NETWORK_DOMAIN: "t5.fs.neo.org"
      TEST_RESULTS_CID: "86C4P6uJC7gb5n3KkwEGpXRfdczubXyRNW5N9KeJRW73"
      AWS_EC2_METADATA_DISABLED: "true"
    steps:
      - name: Get the current date
        id: date
        run: echo "::set-output name=timestamp::$(date +%s)"

      - name: Set RUN_ID
        env:
          TIMESTAMP: ${{ steps.date.outputs.timestamp }}
        run: echo "RUN_ID=${{ github.run_number }}-$TIMESTAMP" >> $GITHUB_ENV

      - name: Checkout neofs-testcases repository
        uses: actions/checkout@v3
        with:
          repository: vvarg229/neofs-testcases
          ref: 'debug-failing'
          path: neofs-testcases

      - name: Checkout neofs-dev-env repository
        uses: actions/checkout@v3
        with:
          repository: nspcc-dev/neofs-dev-env
          ref: 'master'
          path: neofs-dev-env

      - name: Checkout neofs-node repository
        uses: actions/checkout@v3
        with:
          path: neofs-node

      - name: Download latest stable neofs-cli for uploading reports to NeoFS
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          repo: 'nspcc-dev/neofs-node'
          version: 'tags/v0.37.0'
          file: 'neofs-cli-amd64'
          target: 'neofs-node-stable/neofs-cli'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Chmod latest stable neofs-cli
        run: |
          sudo chmod a+x neofs-cli
        working-directory: neofs-node-stable

#################################################################
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          cache: true
          go-version: '1.20.5'
      - run: go version

# Hashlib uses OpenSSL for ripemd160 and apparently OpenSSL disabled some older crypto algos around version 3.0
# in November 2021. All the functions are still there but require manual enabling.
# See https://github.com/openssl/openssl/issues/16994
# But we use ripemd160 for tests.
# For ripemd160 to be supported, we need the openssl configuration file to contain the following lines:
# openssl_conf = openssl_init
#
# [openssl_init]
# providers = provider_sect
#
# [provider_sect]
# default = default_sect
# legacy = legacy_sect
#
# [default_sect]
# activate = 1
#
# [legacy_sect]
# activate = 1

################################################################
      - name: Build neofs-node (neofs-cli and neofs-adm)
        timeout-minutes: 5
        run: |
          make all
          echo "$(pwd)/bin" >> $GITHUB_PATH
        working-directory: neofs-node

################################################################
      - name: Get TAG for docker images
        run: |
          echo "CURRENT_TAG=$( make version | sed 's/^v//' )" >> $GITHUB_ENV
        working-directory: neofs-node

      - name: Build NeoFS storage docker image
        timeout-minutes: 30
        run: |
          make image-storage
        working-directory: neofs-node

      - name: Build NeoFS Inner Ring docker image
        timeout-minutes: 30
        run: |
          make image-ir
        working-directory: neofs-node

      - name: Add NeoFS storage and NeoFS ir docker TAGs to testcases-env config file
        run: |
          sed -i "s/NODE_VERSION=.*/NODE_VERSION=${{ env.CURRENT_TAG }}/g" .github/testcases-env
          sed -i "s/IR_VERSION=.*/IR_VERSION=${{ env.CURRENT_TAG }}/g" .github/testcases-env
        working-directory: neofs-node

################################################################
      - name: Copy testcases-env file to testcases-env in neofs-dev-env
        run: |
          cp .github/testcases-env ${GITHUB_WORKSPACE}/neofs-dev-env/.env
        working-directory: neofs-node


################################################################
      - name: Log environment
        run: |
          echo "Check ip a"
          ip a
          echo "=========================================="

          echo "Check ip r"
          ip r
          echo "=========================================="

          echo "Check free space"
          df -h
          echo "=========================================="

          echo "Check /etc/hosts"
          cat /etc/hosts
          echo "=========================================="

          echo "Check docker images"
          docker images
          echo "=========================================="

          echo "Check docker ps"
          docker ps
          echo "=========================================="

          echo "Check neo-go version"
          neo-go --version
          echo "=========================================="

          echo "Check neofs-s3-authmate version"
          neofs-s3-authmate --version
          echo "=========================================="

          echo "Check neofs-s3-gw version"
          echo "=========================================="
          neofs-s3-gw --version
          echo "=========================================="

          echo "Check neofs-adm version"
          neofs-adm --version
          echo "=========================================="

          echo "Check neofs-ir version"
          neofs-ir --version
          echo "=========================================="

          echo "Check neofs-lens version"
          neofs-lens --version
          echo "=========================================="

          echo "Check neofs-cli version"
          neofs-cli --version
          echo "=========================================="

          echo "Check bin dir"
          ls -lah "${GITHUB_WORKSPACE}/neofs-node/bin"
          echo "=========================================="
        working-directory: neofs-dev-env

################################################################
      - name: Prepare venv
        timeout-minutes: 30
        run: |
          make venv.local-pytest
        working-directory: neofs-testcases

      - name: Run Sanity tests for pull requests
        timeout-minutes: 480
        if: github.event_name == 'pull_request'
        run: |
          source venv.local-pytest/bin/activate && pytest -k test_s3_object_multipart --alluredir=${GITHUB_WORKSPACE}/allure-results pytest_tests/testsuites/services/s3_gate/
        working-directory: neofs-testcases

      - name: Run all tests for other events
        timeout-minutes: 480
        if: github.event_name != 'pull_request'
        run: |
          source venv.local-pytest/bin/activate && pytest --alluredir=${GITHUB_WORKSPACE}/allure-results pytest_tests/testsuites
        working-directory: neofs-testcases

      - name: Log environment after tests
        if: always()
        run: |
          echo "Check free space"
          df -h
          echo "=========================================="

          echo "Check /etc/hosts"
          cat /etc/hosts
          echo "=========================================="

          echo "Check docker images"
          docker images
          echo "=========================================="

          echo "Check docker ps"
          docker ps
          echo "=========================================="

          echo "Check neo-go version"
          neo-go --version
          echo "=========================================="

          echo "Check neofs-s3-authmate version"
          neofs-s3-authmate --version
          echo "=========================================="

          echo "Check neofs-s3-gw version"
          echo "=========================================="
          neofs-s3-gw --version
          echo "=========================================="

          echo "Check neofs-adm version"
          neofs-adm --version
          echo "=========================================="

          echo "Check neofs-ir version"
          neofs-ir --version
          echo "=========================================="

          echo "Check neofs-lens version"
          neofs-lens --version
          echo "=========================================="

          echo "Check neofs-cli version"
          neofs-cli --version
          echo "=========================================="

          echo "Check bin dir"
          ls -lah "${GITHUB_WORKSPACE}/neofs-node/bin"
          echo "=========================================="
        working-directory: neofs-dev-env

################################################################
      - name: Generate Allure report
        timeout-minutes: 60
        uses: simple-elf/allure-report-action@v1.6
        if: always()
        id: allure-report
        with:
          keep_reports: 100000
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history

      - name: Remove testing neofs-cli
        if: always()
        run: |
          make clean
        working-directory: neofs-node

      - name: Enable stable neofs-cli
        if: always()
        run: |
          echo "$(pwd)" >> $GITHUB_PATH
        working-directory: neofs-node-stable

      - name: Create wallet
        if: always()
        run: |
          echo "$TEST_RESULTS_WALLET" | base64 -d > wallet.json
        working-directory: neofs-testcases

      - name: Put allure report to NeoFS
        if: always()
        run: |
          sudo chmod -R a+rw ${GITHUB_WORKSPACE}/allure-report
          source venv.local-pytest/bin/activate && python ./tools/src/process-allure-reports.py --neofs_domain $TEST_RESULTS_NEOFS_NETWORK_DOMAIN --run_id $RUN_ID --cid $TEST_RESULTS_CID --allure_report ${GITHUB_WORKSPACE}/allure-report --wallet wallet.json
        working-directory: neofs-testcases

      - name: Post the link to the report
        timeout-minutes: 60
        if: always()
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Test report'
          state: 'success'
          sha: ${{github.event.pull_request.head.sha || github.sha}}
          target_url: https://http.${{ env.TEST_RESULTS_NEOFS_NETWORK_DOMAIN }}/${{ env.TEST_RESULTS_CID }}/${{ env.RUN_ID }}/index.html
